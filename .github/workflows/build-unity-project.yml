name: Build Unity Project
on:
  workflow_call:
    inputs:
      cloud-build-org-id:
        description: 'The cloud build organization id'
        required: true
        type: string
      cloud-build-project-id:
        description: 'The cloud build project id'
        required: true
        type: string
      project-subdirectory:
        description: 'The subdirectory where the Unity project root is located'
        default: ''
        required: false
        type: string
      project-name:
        description: 'The project name to use in cloud build'
        default: 'default-webgl'
        required: false
        type: string
      environment:
        description: 'Name of the runner environment to use'
        required: true
        type: string
      runs-on:
        description: 'The runner to use'
        default: wsl # TODO: identify runner to use
        required: false
        type: string
    outputs:
      staging-dir-path:
        value: ${{ jobs.run-cloud-build.outputs.staging-dirpath }}
    secrets:
      unity-cloud-build-api-key:
        description: 'The Unity Cloud Build API access token'
        required: true
jobs:
  run-cloud-build:
    runs-on: ${{ inputs.runs-on }}
    environment: ${{ inputs.environment }}
    outputs:
      staging-dir-path: ${{ steps.stage-files.outputs.stagingDirPath }}
    steps:
      - uses: actions/checkout@v2
      - id: cloud-build
        uses: ./.github/actions/unity-cloud-build/runBuild
        with:
          orgId: ${{ inputs.cloud-build-org-id }}
          projectId: ${{ inputs.cloud-build-project-id }}
          apiKey: ${{ secrets.unity-cloud-build-api-key }}
          repoUrl: ${{ github.repositoryUrl }}
          gitRef: ${{ github.head_ref || github.ref }}
          gitSha: ${{ github.event.pull_request.head.sha || github.context.sha }}
          subdirectoryPath: ${{ inputs.project-subdirectory }}
          projectName: ${{ inputs.project-name }}
      - id: stage-files
        uses: ./.github/actions/unity-cloud-build/stageFiles
        if: ${{ success() }}
        with:
          projectName: ${{ inputs.project-name }}
          artifactUrl: ${{ steps.cloud-build.outputs.downloadUrl }}
